events {}

http {
  server {
      listen 80;

      # 프론트엔드로 기본 요청 전달
      location / {
          proxy_pass http://host.docker.internal:3000;
          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      # API 요청은 백엔드로 라우팅
      location /api/ {
          proxy_pass http://host.docker.internal:8080/;
          proxy_set_header Authorization     $http_authorization;
          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      # 웹소켓 서버
      location /ws/ {
          proxy_pass http://localhost:8080/ws/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Host $host;
      }

      # 로그인/리다이렉트 핸들러 (React에게 전달)
      location = /oauth2/redirect {
          proxy_pass       http://host.docker.internal:3000;
          proxy_set_header Host              $http_host;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      # OAuth2 인증 요청 (구글/카카오 호출용)
      location /oauth2/authorization/ {
          proxy_pass       http://host.docker.internal:8080/oauth2/authorization/;
          proxy_set_header Host              $http_host;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      location /oauth2/authorize/ {
           proxy_pass       http://host.docker.internal:8080/oauth2/authorize/;
           proxy_set_header Host              $http_host;
           proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
      }

    # OAuth2 인증 요청 (구글/카카오 호출용)
      location /oauth2/authorization/kakao {
          proxy_pass       http://host.docker.internal:8080/oauth2/authorization/kakao;
          proxy_set_header Host              $http_host;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

    # 토큰 교환용 엔드포인트
    location /oauth2/token {
        proxy_pass       http://host.docker.internal:8080/oauth2/token;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /login/oauth2/ {
        proxy_pass http://host.docker.internal:8080/login/oauth2/;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 백엔드가 보내는 redirect 응답 헤더의 host를 프론트 host로 치환
        proxy_redirect   http://host.docker.internal:8080/ /;
    }

    location /payment/create-order-id {
        proxy_pass http://host.docker.internal:8080/payment/create-order-id;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /payment/confirm {
            proxy_pass http://host.docker.internal:8080/payment/confirm;
            proxy_set_header Host              $http_host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /payment/cancel/ {
                proxy_pass http://host.docker.internal:8080/payment/cancle/;
                proxy_set_header Host              $http_host;
                proxy_set_header X-Real-IP         $remote_addr;
                proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
    }
     location /payment/price/ {
                    proxy_pass http://host.docker.internal:8080/payment/price/;
                    proxy_set_header Host              $http_host;
                    proxy_set_header X-Real-IP         $remote_addr;
                    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
        }

  }
}